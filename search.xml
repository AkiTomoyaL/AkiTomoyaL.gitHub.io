<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>测试</title>
      <link href="/2023/11/28/ceshi/"/>
      <url>/2023/11/28/ceshi/</url>
      
        <content type="html"><![CDATA[<h1 id="这里是测试"><a href="#这里是测试" class="headerlink" title="这里是测试"></a>这里是测试</h1><h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><div class="note simple"><p>默认块</p></div><div class="note default simple"><p>default块</p></div><div class="note primary simple"><p>primary块</p></div><div class="note success simple"><p>success块</p></div><div class="note info simple"><p>info块</p></div><div class="note warning simple"><p>warning块</p></div><div class="note danger simple"><p>danger块</p></div><div class="note modern"><p>默认块</p></div><div class="note default modern"><p>default块</p></div><div class="note primary modern"><p>primary块</p></div><div class="note success modern"><p>success块</p></div><div class="note info modern"><p>info块</p></div><div class="note warning modern"><p>warning块</p></div><div class="note danger modern"><p>danger块</p></div><div class="note flat"><p>默认块</p></div><div class="note default flat"><p>default块</p></div><div class="note primary flat"><p>primary块</p></div><div class="note success flat"><p>success块</p></div><div class="note info flat"><p>info块</p></div><div class="note warning flat"><p>warning块</p></div><div class="note danger flat"><p>danger块</p></div><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default块</p></div><div class="note primary disabled"><p>primary块</p></div><div class="note success disabled"><p>success块</p></div><div class="note info disabled"><p>info块</p></div><div class="note warning disabled"><p>warning块</p></div><div class="note danger disabled"><p>danger块</p></div><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="/media/cover/9.png"></p><div class="gallery-container" data-type="data" data-button="">      <div class="gallery-data">[{"url":"/media/cover/1.png","alt":""},{"url":"/media/cover/2.png","alt":""},{"url":"/media/cover/3.png","alt":""},{"url":"/media/cover/4.png","alt":""},{"url":"/media/cover/5.png","alt":""},{"url":"/media/cover/6.png","alt":""},{"url":"/media/cover/7.png","alt":""},{"url":"/media/cover/8.png","alt":""}]</div>      <div class="gallery-items">      </div>    </div><h2 id="hide"><a href="#hide" class="headerlink" title="hide"></a>hide</h2><p>AkiTomoyaL</p><p>这是哪？ <span class="hide-inline"><button type="button" class="hide-button" style="background-color: #FF7242;color: #fff">不知道耶🤔  </button><span class="hide-content">AkiTomoyaL</span></span></p><p>这是哪？</p><div class="hide-block"><button type="button" class="hide-button" style="">不知道耶🤔    </button><div class="hide-content"><p>AkiTomoyaL</p></div></div><p>这是哪？</p><details class="toggle" ><summary class="toggle-button" style="">不知道耶🤔</summary><div class="toggle-content"><p>AkiTomoyaL</p></div></details><h2 id="tab"><a href="#tab" class="headerlink" title="tab"></a>tab</h2><div class="tabs" id="test4"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test4-1"><i class="fas fa-apple-whole"></i>这是啥？</button><button type="button" class="tab " data-href="test4-2"><i class="fab fa-apple"></i>这是啥？</button><button type="button" class="tab " data-href="test4-3">这是啥？</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>是苹果</strong></p></div><div class="tab-item-content" id="test4-2"><p><strong>是苹呆</strong></p></div><div class="tab-item-content" id="test4-3"><p><strong>啥都没有</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="inlineImg"><a href="#inlineImg" class="headerlink" title="inlineImg"></a>inlineImg</h2><p>好耶！<img class="inline-img" src="/pageimg/haoye1.gif" style="height:80px" /><img class="inline-img" src="/pageimg/haoye2.gif" style="height:80px" /></p><h2 id="label"><a href="#label" class="headerlink" title="label"></a>label</h2><mark class="hl-label default">颜色</mark> <mark class="hl-label blue">蓝色</mark> <mark class="hl-label pink">粉色</mark> <mark class="hl-label red">红色</mark> <mark class="hl-label purple">紫色</mark> <mark class="hl-label orange">橙色</mark> <mark class="hl-label green">绿色</mark> <h2 id="aplayer"><a href="#aplayer" class="headerlink" title="aplayer"></a>aplayer</h2><div id="aplayer-oSEOhviA" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="1983780234" data-server="netease" data-type="song" data-autoplay="false" data-listmaxheight="340px" data-preload="auto" data-theme="#20ff20" data-volume="0.4" mutex="true"></div><div id="aplayer-oSEOhviA" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="992012718" data-server="netease" data-type="playlist" data-autoplay="false" data-listmaxheight="340px" data-preload="auto" data-theme="#20ff20" data-volume="0.4" mutex="true"></div><h2 id="link"><a href="#link" class="headerlink" title="link"></a>link</h2><a href="https://akitomoyal.github.io/," title="&#x2F;media&#x2F;i.jpg" target="">AkiTomoyaL,</a><h3 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h3><p>这里是<strong>重点文本的</strong>演示案例。<h3 id="注记与增订"><a href="#注记与增订" class="headerlink" title="注记与增订"></a>注记与增订</h3><p><u class="pn">划线！</u><u class="pn">划线！</u>全划完就等于我会了！<p><s>划线！</s><s>划线！</s>全划完就等于我会了！]]></content>
      
      
      <categories>
          
          <category> 测试分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试标签 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于YOLOv5-LPRNet的车牌检测与识别</title>
      <link href="/2023/11/26/license_plate/"/>
      <url>/2023/11/26/license_plate/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文是我在进行车牌检测与识别以及后续pt模型转化为onnx所遇到的问题   </p></blockquote><p>是谁写的？ <span class="hide-inline"><button type="button" class="hide-button" style="background-color: #FF7242;color: #fff">不知道耶🤔  </button><span class="hide-content">AkiTomoyaL </span></span>  </p><mark class="hl-label default">颜色</mark> <mark class="hl-label blue">蓝色</mark> <mark class="hl-label pink">粉色</mark> <mark class="hl-label red">红色</mark> <mark class="hl-label purple">紫色</mark> <mark class="hl-label orange">橙色</mark> <mark class="hl-label green">绿色</mark> <p>本文分为四个部分  </p><ul><li>车牌数据的预处理  </li><li>YOLOv5车牌检测中训练与检测问题解决  </li><li>LPRNet中车牌识别训练推理问题解决</li><li>LPRNet训练生成pt模型转换ONNX的模型不兼容问题</li></ul><h2 id="车牌数据的预处理"><a href="#车牌数据的预处理" class="headerlink" title="车牌数据的预处理"></a>车牌数据的预处理</h2><h3 id="CCPD数据集标注处理"><a href="#CCPD数据集标注处理" class="headerlink" title="CCPD数据集标注处理"></a>CCPD数据集标注处理</h3><p>数据来源(<code>https://github.com/detectRecog/CCPD</code>)<br>CCPD数据集没有专门的标注文件，每张图像的文件名就是该图像对应的数据标注。<br>例如图片3061158854166666665-97_100-159&amp;434_586&amp;578-558&amp;578_173&amp;523_159&amp;434_586&amp;474-0_0_3_24_33_32_28_30-64-233.jpg的文件名可以由分割符’-‘分为多个部分：  </p><ol><li>3061158854166666665为区域（这个值可能有问题，可以不管）；  </li><li>97_100对应车牌的两个倾斜角度-水平倾斜角和垂直倾斜角, 水平倾斜97度, 竖直倾斜100度。水平倾斜度是车牌与水平线之间的夹角。二维旋转后，垂直倾斜角为车牌左边界线与水平线的夹角。CCPD数据集中这个参数标注可能不那么准，这个指标具体参考了论文Hough Transform and Its Application in Vehicle License Plate Tilt Correction；  </li><li>159&amp;434_586&amp;578对应边界框左上角和右下角坐标:左上(159, 434), 右下(586, 578)；  </li><li>558&amp;578_173&amp;523_159&amp;434_586&amp;474对应车牌四个顶点坐标(右下角开始顺时针排列)：右下(558, 578)，左下(173, 523)，左上(159, 434)，右上(586, 474)；  </li><li>0_0_3_24_33_32_28_30为车牌号码（第一位为省份缩写），在CCPD2019中这个参数为7位，CCPD2020中为8位，有对应的关系表；  </li><li>64为亮度，数值越大车牌越亮（可能不准确，仅供参考）；  </li><li>233为模糊度，数值越小车牌越模糊（可能不准确，仅供参考）。<br>以下代码能够了解标注信息(仅供参考)<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageDraw, ImageFont</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">provincelist = [</span><br><span class="line">    <span class="string">&quot;皖&quot;</span>, <span class="string">&quot;沪&quot;</span>, <span class="string">&quot;津&quot;</span>, <span class="string">&quot;渝&quot;</span>, <span class="string">&quot;冀&quot;</span>,</span><br><span class="line">    <span class="string">&quot;晋&quot;</span>, <span class="string">&quot;蒙&quot;</span>, <span class="string">&quot;辽&quot;</span>, <span class="string">&quot;吉&quot;</span>, <span class="string">&quot;黑&quot;</span>,</span><br><span class="line">    <span class="string">&quot;苏&quot;</span>, <span class="string">&quot;浙&quot;</span>, <span class="string">&quot;京&quot;</span>, <span class="string">&quot;闽&quot;</span>, <span class="string">&quot;赣&quot;</span>,</span><br><span class="line">    <span class="string">&quot;鲁&quot;</span>, <span class="string">&quot;豫&quot;</span>, <span class="string">&quot;鄂&quot;</span>, <span class="string">&quot;湘&quot;</span>, <span class="string">&quot;粤&quot;</span>,</span><br><span class="line">    <span class="string">&quot;桂&quot;</span>, <span class="string">&quot;琼&quot;</span>, <span class="string">&quot;川&quot;</span>, <span class="string">&quot;贵&quot;</span>, <span class="string">&quot;云&quot;</span>,</span><br><span class="line">    <span class="string">&quot;西&quot;</span>, <span class="string">&quot;陕&quot;</span>, <span class="string">&quot;甘&quot;</span>, <span class="string">&quot;青&quot;</span>, <span class="string">&quot;宁&quot;</span>,</span><br><span class="line">    <span class="string">&quot;新&quot;</span>]</span><br><span class="line"></span><br><span class="line">wordlist = [</span><br><span class="line">    <span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;C&quot;</span>, <span class="string">&quot;D&quot;</span>, <span class="string">&quot;E&quot;</span>,</span><br><span class="line">    <span class="string">&quot;F&quot;</span>, <span class="string">&quot;G&quot;</span>, <span class="string">&quot;H&quot;</span>, <span class="string">&quot;J&quot;</span>, <span class="string">&quot;K&quot;</span>,</span><br><span class="line">    <span class="string">&quot;L&quot;</span>, <span class="string">&quot;M&quot;</span>, <span class="string">&quot;N&quot;</span>, <span class="string">&quot;P&quot;</span>, <span class="string">&quot;Q&quot;</span>,</span><br><span class="line">    <span class="string">&quot;R&quot;</span>, <span class="string">&quot;S&quot;</span>, <span class="string">&quot;T&quot;</span>, <span class="string">&quot;U&quot;</span>, <span class="string">&quot;V&quot;</span>,</span><br><span class="line">    <span class="string">&quot;W&quot;</span>, <span class="string">&quot;X&quot;</span>, <span class="string">&quot;Y&quot;</span>, <span class="string">&quot;Z&quot;</span>, <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;6&quot;</span>, <span class="string">&quot;7&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;9&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># --- 绘制边界框</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">DrawBox</span>(<span class="params">im, box</span>):</span><br><span class="line">    draw = ImageDraw.Draw(im)</span><br><span class="line">    draw.rectangle([<span class="built_in">tuple</span>(box[<span class="number">0</span>]), <span class="built_in">tuple</span>(box[<span class="number">1</span>])],  outline=<span class="string">&quot;#FFFFFF&quot;</span>, width=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># --- 绘制四个关键点</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">DrawPoint</span>(<span class="params">im, points</span>):</span><br><span class="line"></span><br><span class="line">    draw = ImageDraw.Draw(im)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> points:</span><br><span class="line">        center = (p[<span class="number">0</span>], p[<span class="number">1</span>])</span><br><span class="line">        radius = <span class="number">5</span></span><br><span class="line">        right = (center[<span class="number">0</span>]+radius, center[<span class="number">1</span>]+radius)</span><br><span class="line">        left = (center[<span class="number">0</span>]-radius, center[<span class="number">1</span>]-radius)</span><br><span class="line">        draw.ellipse((left, right), fill=<span class="string">&quot;#FF0000&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># --- 绘制车牌</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">DrawLabel</span>(<span class="params">im, label</span>):</span><br><span class="line">    draw = ImageDraw.Draw(im)</span><br><span class="line">   <span class="comment"># draw.multiline_text((30,30), label.encode(&quot;utf-8&quot;), fill=&quot;#FFFFFF&quot;)</span></span><br><span class="line">    font = ImageFont.truetype(<span class="string">&#x27;simsun.ttc&#x27;</span>, <span class="number">64</span>)</span><br><span class="line">    draw.text((<span class="number">30</span>, <span class="number">30</span>), label, font=font)</span><br><span class="line"></span><br><span class="line"><span class="comment"># --- 图片可视化</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ImgShow</span>(<span class="params">imgpath, box, points, label</span>):</span><br><span class="line">    <span class="comment"># 打开图片</span></span><br><span class="line">    im = Image.<span class="built_in">open</span>(imgpath)</span><br><span class="line">    DrawBox(im, box)</span><br><span class="line">    DrawPoint(im, points)</span><br><span class="line">    DrawLabel(im, label)</span><br><span class="line">    <span class="comment"># 显示图片</span></span><br><span class="line">    im.show()</span><br><span class="line">    im.save(<span class="string">&#x27;result.jpg&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 图像路径</span></span><br><span class="line">    imgpath = <span class="string">&#x27;ccpd_green/val/0136360677083-95_103-255&amp;434_432&amp;512-432&amp;512_267&amp;494_255&amp;434_424&amp;449-0_0_3_25_30_24_24_32-98-218.jpg&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 图像名</span></span><br><span class="line">    imgname = os.path.basename(imgpath).split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 根据图像名分割标注</span></span><br><span class="line">    _, _, box, points, label, brightness, blurriness = imgname.split(<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># --- 边界框信息</span></span><br><span class="line">    box = box.split(<span class="string">&#x27;_&#x27;</span>)</span><br><span class="line">    box = [<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, i.split(<span class="string">&#x27;&amp;&#x27;</span>))) <span class="keyword">for</span> i <span class="keyword">in</span> box]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># --- 关键点信息</span></span><br><span class="line">    points = points.split(<span class="string">&#x27;_&#x27;</span>)</span><br><span class="line">    points = [<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, i.split(<span class="string">&#x27;&amp;&#x27;</span>))) <span class="keyword">for</span> i <span class="keyword">in</span> points]</span><br><span class="line">    <span class="comment"># 将关键点的顺序变为从左上顺时针开始</span></span><br><span class="line">    points = points[-<span class="number">2</span>:]+points[:<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># --- 读取车牌号</span></span><br><span class="line">    label = label.split(<span class="string">&#x27;_&#x27;</span>)</span><br><span class="line">    <span class="comment"># 省份缩写</span></span><br><span class="line">    province = provincelist[<span class="built_in">int</span>(label[<span class="number">0</span>])]</span><br><span class="line">    <span class="comment"># 车牌信息</span></span><br><span class="line">    words = [wordlist[<span class="built_in">int</span>(i)] <span class="keyword">for</span> i <span class="keyword">in</span> label[<span class="number">1</span>:]]</span><br><span class="line">    <span class="comment"># 车牌号</span></span><br><span class="line">    label = province+<span class="string">&#x27;&#x27;</span>.join(words)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># --- 图片可视化</span></span><br><span class="line">    ImgShow(imgpath, box, points, label)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h2 id="YOLOv5车牌检测中训练与检测问题解决"><a href="#YOLOv5车牌检测中训练与检测问题解决" class="headerlink" title="YOLOv5车牌检测中训练与检测问题解决"></a>YOLOv5车牌检测中训练与检测问题解决</h2><h3 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h3><p>注意数据集要跟标签放在同一个文件夹中：  </p><ul><li>data  <ul><li>images<ul><li>train</li><li>test</li></ul></li><li>labels  （labels存放的是images里的所有标签）</li></ul></li></ul><h3 id="检测"><a href="#检测" class="headerlink" title="检测"></a>检测</h3><p>调用训练得到的pt模型<br>修改相应的超参数便可以开始检测车牌的位置啦<br>在检测的时候 会出现报错:    </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OutOfRangeError (see above <span class="keyword">for</span> traceback): PaddingFIFOQueue <span class="string">&#x27;_2_get_batch/batch/padding_fifo_queue&#x27;</span> <span class="keyword">is</span> closed <span class="keyword">and</span> has insufficient elements (requested <span class="number">1</span>, current size <span class="number">0</span>) [[Node: get_batch/batch = QueueDequeueManyV2[component_types=[DT_STRING, DT_FLOAT, DT_INT32, DT_INT32], timeout_ms=-<span class="number">1</span>, _device=<span class="string">&quot;/job:localhost/replica:0/task:0/cpu:0&quot;</span>](get_batch/batch/padding_fifo_queue, get_batch/batch/n)]]</span><br></pre></td></tr></table></figure><p>我发现是由于数据集中有一张图片无法显示和打开导致的，于是我在datasets.py中加入try catch语句跳过损坏的图片继续运行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># Read image</span></span><br><span class="line">    self.count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        img0 = cv2.imread(path)  <span class="comment"># BGR</span></span><br><span class="line">        <span class="keyword">assert</span> img0 <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>, <span class="string">&#x27;Image Not Found &#x27;</span> + path</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error processing image <span class="subst">&#123;path&#125;</span>: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="comment"># 可以在这里添加针对损坏图片的处理逻辑</span></span><br><span class="line">        <span class="keyword">return</span> self.__next__()  <span class="comment"># 提前返回并继续下一次迭代</span></span><br></pre></td></tr></table></figure><p>这样子就能够完整运行检测任务啦！</p><h2 id="LPRNet中车牌识别训练推理问题解决"><a href="#LPRNet中车牌识别训练推理问题解决" class="headerlink" title="LPRNet中车牌识别训练推理问题解决"></a>LPRNet中车牌识别训练推理问题解决</h2><h3 id="训练-1"><a href="#训练-1" class="headerlink" title="训练"></a>训练</h3><p>在训练中我调整超参数epoch便进行训练，我发现超过epoch超过16的时候模型梯度爆炸了！<br>这是为什么呢？<br>我发现epoch和lr_schedule息息相关，epoch不能超过后者列表中的最后一位数<br>因为在训练中learning_rate会随着lr_schedule列表中的数字梯度下降  </p><h2 id="LPRNet训练生成pt模型转换ONNX的模型不兼容问题"><a href="#LPRNet训练生成pt模型转换ONNX的模型不兼容问题" class="headerlink" title="LPRNet训练生成pt模型转换ONNX的模型不兼容问题"></a>LPRNet训练生成pt模型转换ONNX的模型不兼容问题</h2><p>检测生成pt模型后我就尝试把pytorch模型转换到onnx文件，然后使用opencv做车牌检测与识别 </p><hr><p>首先是转换车牌检测retinaface到onnx文件，这一步倒是很顺利，转换没有出错，并且使用opencv读取onnx文件做前向推理的输出结果也是正确的。第二步转换车牌识别LPRNet到onnx文件，由于Pytorch自带torch.onnx.export转换得到的ONNX，因此转换的代码很简单，在生成onnx文件后，opencv读取onnx文件出现了模型其妙的错误</p><hr><p>观察LPRNet的网络结构，发现在LPRNet里定义了三维池化层，影响了转化<br><img src="/media/post/10.png" alt="结构图"><br>我发现二维池化层并不影响，于是我决定使用两个二维池化层代替三维池化层，这并不影响模型性能<br><img src="/media/post/11.png" alt="转化图"> </p><p>然后再在修改后的模型重新训练，便可以成功转换成ONNX模型啦！</p><p>大功告成！！！<img class="inline-img" src="/pageimg/haoye1.gif" style="height:80px" /><img class="inline-img" src="/pageimg/haoye2.gif" style="height:80px" /></p><p><u class="pn">划线！</u><u class="pn">划线！</u>全划完就等于我会了！<p><s>划线！</s><s>划线！</s>全划完就等于我会了！<p>后续我会将车牌检测与识别的代码以及对应的模型上传至我的github，请注意查收喵~</p><blockquote><p>行有所思，学有所得，陋鄙之言，请多指教。 —— AkiTomoyaL</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 图像识别 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人工智能 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
